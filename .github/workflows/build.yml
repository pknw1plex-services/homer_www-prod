name: Build Dockerfile

on:
  workflow_dispatch:
    inputs:
      docker_build:
        description: 'Backup Service'
        required: true
        type: boolean
        default: 'true'
      docker_pull:
        description: 'Backup Config'
        required: true
        type: boolean
      docker_root:
        required: true
        default: '/etc/pknw1/docker'

jobs:
  docker_build:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.build-docker.outputs.TIMESTAMP }}
    steps:
      - uses: actions/checkout@v3
        #- name: Get repository name
        #id: repo-name
        #uses: MariachiBear/get-repo-name-action@v1.1.0
        #with:
        #  with-owner: 'false'
        #  string-case: 'lowercase'
        #- name: Login to Docker Hub
        #uses: docker/login-action@v3
        #with:
        #  username: ${{ secrets.DOCKERHUB_USERNAME }}
        #  password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        id: build-docker
        run: |
          timestamp=$(date +%s)
          echo "TIMESTAMP=$timestamp" >> $GITHUB_OUTPUT
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:${timestamp} .
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:${timestamp}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:latest
      - name: notify_docker
        run: |
          curl -d "version $TIMESTAMP container build" ntfy.sh/pknw1

          
  netlify_build:
    runs-on: ubuntu-latest
    needs: docker_build
    env:
      TIMESTAMP: ${{ needs.docker_build.outputs.timestamp }}
    steps:
      - uses: actions/checkout@v3
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - name: Update Gitlab Content
        id: gitlab-update 
        run: |
          if ! [[ -d ~/.ssh ]]; then mkdir ~/.ssh && chmod 700 ~/.ssh; fi
          echo "${{ secrets.GITLAB_SSH }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          echo "HOST *" > ~/.ssh/config
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          git clone git@gitlab.com:www-content/homer_www.git netflify_gitlab
          cp -R publish/* netlify_gitlab
          cd netlify_gitlab
          echo $TIMESTAMP > version
          git add . && git commit -m "version $TIMESTAMP" && git push
      - name: notify_netlify
        run: |
          curl -d "version $TIMESTAMP netlify build" ntfy.sh/pknw1

  docker_pull:
    runs-on: ubuntu-latest
    needs: docker_build
    if: ${{ inputs.docker_pull == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd ${{ inputs.docker_root }}/${{ steps.repo-name.outputs.repository-name }} && docker compose pull
